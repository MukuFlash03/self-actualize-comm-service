services:
  test-backend:
    build: .
    environment:
      DATABASE_URL: postgresql://testuser:testpass@test-db:5432/test_db
      # PYTHONPATH: /app/communication-microservice
    depends_on:
      test-db:
        condition: service_healthy
    networks:
      - test-network
    # command: python -m unittest discover -s tests -p Test*;
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&  # Give extra time for DB initialization
        python -m unittest discover -s tests -p "Test*.py"
      "

  test-db:
    image: postgres:16-alpine3.18
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_DB=test_db
    networks:
      - test-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

networks:
  test-network:
